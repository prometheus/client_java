version: "3"
services:
  hello-world-app:
    image: opentelemetry-java-agent
    build:
      context: .
      dockerfile_inline: |
        FROM openjdk:11-jre
        WORKDIR /
        RUN curl -sOL https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar
    network_mode: host
    volumes:
      - ./example-hello-world-app/target/example-hello-world-app.jar:/example-hello-world-app.jar
    environment:
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
      - OTEL_LOGS_EXPORTER=none
    command:
      - java
      - -javaagent:/opentelemetry-javaagent.jar
      - -jar
      - /example-hello-world-app.jar
  greeting-service:
    # The opentelemetry-java-agent image is coming from the hello-world-up service above.
    image: opentelemetry-java-agent
    network_mode: host
    volumes:
      - ./example-greeting-service/target/example-greeting-service.jar:/example-greeting-service.jar
    environment:
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
      - OTEL_LOGS_EXPORTER=none
    command:
      - java
      - -javaagent:/opentelemetry-javaagent.jar
      - -jar
      - /example-greeting-service.jar
  collector:
    image: otel/opentelemetry-collector-contrib:0.130.0@sha256:867d1074c2f750936fb9358ec9eefa009308053cf156b2c7ca1761ba5ef78452
    network_mode: host
    volumes:
      - ./config/otelcol-config.yaml:/config.yaml
    command:
      - --config=file:/config.yaml
  prometheus:
    image: prom/prometheus:v3.5.0@sha256:63805ebb8d2b3920190daf1cb14a60871b16fd38bed42b857a3182bc621f4996
    network_mode: host
    volumes:
      - ./config/prometheus.yaml:/prometheus.yaml
    command:
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
      - --config.file=/prometheus.yaml
  tempo:
    image: grafana/tempo:2.8.1@sha256:bc9245fe3da4e63dc4c6862d9c2dad9bcd8be13d0ba4f7705fa6acda4c904d0e
    network_mode: host
    volumes:
      - ./config/tempo-config.yaml:/config.yaml
    command:
      - --config.file=/config.yaml
  grafana:
    image: grafana/grafana:12.0.2@sha256:b5b59bfc7561634c2d7b136c4543d702ebcc94a3da477f21ff26f89ffd4214fa
    network_mode: host
    ports:
      - "3000:3000"
    volumes:
      - ./config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/grafana-datasources.yaml
      - ./config/grafana-dashboards.yaml:/etc/grafana/provisioning/dashboards/grafana-dashboards.yaml
      - ./config/grafana-example-dashboard.json:/etc/grafana/example-dashboard.json
  k6:
    image: grafana/k6@sha256:b1625f686ef1c733340b00de57bce840e0b4b1f7e545c58305a5db53e7ad3797
    network_mode: host
    volumes:
      - ./config/k6-script.js:/k6-script.js
    command:
      - run
      - /k6-script.js
