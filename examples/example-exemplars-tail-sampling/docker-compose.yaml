version: "3"
services:
  hello-world-app:
    image: opentelemetry-java-agent
    build:
      context: .
      dockerfile_inline: |
        FROM openjdk:11-jre
        WORKDIR /
        RUN curl -sOL https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar
    network_mode: host
    volumes:
      - ./example-hello-world-app/target/example-hello-world-app.jar:/example-hello-world-app.jar
    environment:
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
      - OTEL_LOGS_EXPORTER=none
    command:
      - java
      - -javaagent:/opentelemetry-javaagent.jar
      - -jar
      - /example-hello-world-app.jar
  greeting-service:
    # The opentelemetry-java-agent image is coming from the hello-world-up service above.
    image: opentelemetry-java-agent
    network_mode: host
    volumes:
      - ./example-greeting-service/target/example-greeting-service.jar:/example-greeting-service.jar
    environment:
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
      - OTEL_LOGS_EXPORTER=none
    command:
      - java
      - -javaagent:/opentelemetry-javaagent.jar
      - -jar
      - /example-greeting-service.jar
  collector:
    image: otel/opentelemetry-collector-contrib:0.138.0@sha256:4a951ff0a9772f4fa8e9c7a326434370301b98b2b813933468dcb54aa6a6b5e5
    network_mode: host
    volumes:
      - ./config/otelcol-config.yaml:/config.yaml
    command:
      - --config=file:/config.yaml
  prometheus:
    image: prom/prometheus:v3.7.2@sha256:23031bfe0e74a13004252caaa74eccd0d62b6c6e7a04711d5b8bf5b7e113adc7
    network_mode: host
    volumes:
      - ./config/prometheus.yaml:/prometheus.yaml
    command:
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
      - --config.file=/prometheus.yaml
  tempo:
    image: grafana/tempo:2.9.0@sha256:65a5789759435f1ef696f1953258b9bbdb18eb571d5ce711ff812d2e128288a4
    network_mode: host
    volumes:
      - ./config/tempo-config.yaml:/config.yaml
    command:
      - --config.file=/config.yaml
  grafana:
    image: grafana/grafana:12.2.1@sha256:35c41e0fd0295f5d0ee5db7e780cf33506abfaf47686196f825364889dee878b
    network_mode: host
    ports:
      - "3000:3000"
    volumes:
      - ./config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/grafana-datasources.yaml
      - ./config/grafana-dashboards.yaml:/etc/grafana/provisioning/dashboards/grafana-dashboards.yaml
      - ./config/grafana-example-dashboard.json:/etc/grafana/example-dashboard.json
  k6:
    image: grafana/k6@sha256:290b029fa9f50fb9e5d007a0cb8d97984f71cd2a31e5a092349c284a3cfff2c2
    network_mode: host
    volumes:
      - ./config/k6-script.js:/k6-script.js
    command:
      - run
      - /k6-script.js
