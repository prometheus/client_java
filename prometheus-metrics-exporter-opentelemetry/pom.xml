<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.prometheus</groupId>
        <artifactId>client_java</artifactId>
        <version>1.3.3</version>
    </parent>

    <artifactId>prometheus-metrics-exporter-opentelemetry</artifactId>
    <packaging>bundle</packaging>

    <name>Prometheus Metrics to OpenTelemetry Exporter</name>
    <description>
        Converts Prometheus metrics to OpenTelemetry format and pushes them to an OTLP endpoint
    </description>

    <properties>
        <automatic.module.name>io.prometheus.metrics.exporter.opentelemetry</automatic.module.name>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.opentelemetry.instrumentation</groupId>
                <artifactId>opentelemetry-instrumentation-bom-alpha</artifactId>
                <version>${otel.instrumentation.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>prometheus-metrics-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>otel-agent-resources</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-exporter-otlp</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk-extension-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk-extension-incubator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry.instrumentation</groupId>
            <artifactId>opentelemetry-resources</artifactId>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>org.wiremock</groupId>
            <artifactId>wiremock</artifactId>
            <version>3.9.2</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.2.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-proto</artifactId>
            <version>1.7.1-alpha</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk-testing</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources-filtered</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <id>regex-property</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>otel.instrumentation.string-version</name>
                            <value>${otel.instrumentation.version}</value>
                            <regex>[\.-]</regex>
                            <replacement>_</replacement>
                            <failIfNoMatch>true</failIfNoMatch>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <includes>
                                    <include>io.opentelemetry:*</include>
                                    <include>io.opentelemetry.semconv:*</include>
                                    <include>io.opentelemetry.instrumentation:*</include>
                                    <include>com.squareup.*:*</include>
                                    <include>org.jetbrains:*</include>
                                    <include>org.jetbrains.*:*</include>
                                </includes>
                            </artifactSet>
                            <relocations>
                                <relocation>
                                    <pattern>io.opentelemetry</pattern>
                                    <shadedPattern>
                                        io.prometheus.metrics.shaded.io_opentelemetry_${otel.instrumentation.string-version}
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>io.opentelemetry.instrumentation</pattern>
                                    <shadedPattern>
                                        io.prometheus.metrics.shaded.io_opentelemetry_${otel.instrumentation.string-version}.instrumentation
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>io.opentelemetry.semconv</pattern>
                                    <shadedPattern>
                                        io.prometheus.metrics.shaded.io_opentelemetry_${otel.instrumentation.string-version}.semconv
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>okhttp3</pattern>
                                    <shadedPattern>
                                        io.prometheus.metrics.shaded.io_opentelemetry_${otel.instrumentation.string-version}.okhttp3
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>kotlin</pattern>
                                    <shadedPattern>
                                        io.prometheus.metrics.shaded.io_opentelemetry_${otel.instrumentation.string-version}.kotlin
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.intellij</pattern>
                                    <shadedPattern>
                                        io.prometheus.metrics.shaded.io_opentelemetry_${otel.instrumentation.string-version}.org.intellij
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.jetbrains</pattern>
                                    <shadedPattern>
                                        io.prometheus.metrics.shaded.io_opentelemetry_${otel.instrumentation.string-version}.org.jetbrains
                                    </shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>okio</pattern>
                                    <shadedPattern>
                                        io.prometheus.metrics.shaded.io_opentelemetry_${otel.instrumentation.string-version}.okio
                                    </shadedPattern>
                                </relocation>
                            </relocations>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            </transformers>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>lib/opentelemetry-*</exclude>
                                        <exclude>META-INF/maven/org.jctools/**</exclude>
                                        <exclude>META-INF/maven/org.jetbrains/**</exclude>
                                        <exclude>META-INF/versions/**</exclude>
                                        <exclude>META-INF/native-image/**</exclude>
                                        <exclude>META-INF/proguard/**</exclude>
                                        <exclude>META-INF/*.kotlin_module</exclude>
                                        <exclude>META-INF/MANIFEST.MF</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
