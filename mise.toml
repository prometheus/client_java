[env]
PROTO_GENERATION = "true"

[tools]
"cargo:zizmor" = "latest"
"go:github.com/gohugoio/hugo" = "latest"
"go:github.com/grafana/oats" = "latest"
java = "temurin-17.0.13+11"
 lychee = "latest"
protoc = "latest"

[tasks.ci]
description = "CI Build"
run = [
  "./mvnw clean install",
  # just to check if javadoc can be generated
  "./mvnw javadoc:javadoc -P javadoc"
]
env = { REQUIRE_PROTO_UP_TO_DATE = "true" }

[tasks.format]
description = "format source code"
run = "./mvnw spotless:apply"

[tasks.compile]
description = "bare compile, ignoring formatting and linters"
run = "./mvnw install -DskipTests -Dspotless.check.skip=true -Dcoverage.skip=true -Dcheckstyle.skip=true -Dwarnings=-nowarn"

[tasks.test]
description = "run unit tests, ignoring formatting and linters"
run = "./mvnw test -Dspotless.check.skip=true -Dcoverage.skip=true -Dcheckstyle.skip=true -Dwarnings=-nowarn"

[tasks.test-all]
description = "run all tests"
run = "./mvnw verify"

[tasks.build]
description = "build all modules wihthout tests"
run = "./mvnw install -DskipTests"

[tasks.lint]
run = "scripts/super-linter.sh"

[tasks.lint-links]
run = "lychee --cache --include-fragments ."

[tasks.lint-gh-actions]
run = "zizmor .github/"

[tasks.lint-rest]
description = "All lints not covered by super linter"
depends = [
  #  "lint-links", # try out first
  "lint-gh-actions"]

[tasks.acceptance-test]
description = "Run OATs acceptance tests"
depends = "build"
run = "oats -timeout 5m examples/"

[tasks.native-test]
depends = "build"
tools.java = "graalvm-22.3.3+java17"
run = "../../mvnw test -PnativeTest"
dir = "integration-tests/it-spring-boot-smoke-test"

[tasks.set-version]
run = 'mvn versions:set -DnewVersion={{arg(name="version")}}'

[tasks.javadoc]
run = [
  "./mvnw -B clean compile javadoc:javadoc javadoc:aggregate -P javadoc",
  "mv ./target/reports/apidocs ./docs/static/api && echo && echo 'ls ./docs/static/api' && ls ./docs/static/api"
]

[tasks.set-gh-pages-version]
run = "./scripts/set-release-version-github-pages.sh"

[tasks.prepare-gh-pages]
description = "Prepare GitHub pages"
depends = ["javadoc", "set-gh-pages-version"]

[tasks.build-gh-pages]
description = "Build GitHub pages"
# For maximum backward compatibility with Hugo modules
env = { HUGO_ENVIRONMENT = "production", HUGO_ENV = "production" }
dir = "docs"
run = [
  "hugo --gc --minify --baseURL ${BASE_URL}/",
  "echo 'ls ./public/api' && ls ./public/api"
]

[settings]
# to get lock file support and for go backend
experimental = true

