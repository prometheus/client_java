name: Deploy Documentation to Github Pages

on:
  # Runs on pushes targeting the 1.0.x branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.115.4
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
    steps:
      - name: Install OpenJDK 17
        run: sudo apt-get -q install -y openjdk-17-jdk
      - name: Make 17 the default java version
        run: sudo update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
      - name: Make 17 the default javadoc version
        run: sudo update-alternatives --set javadoc /usr/lib/jvm/java-17-openjdk-amd64/bin/javadoc
      - name: Print java and javadoc versions
        run: |
            echo 'java --version' && \
            java --version && \
            echo 'javadoc --version' && \
            javadoc --version && \
            echo 'echo $JAVA_HOME' && \
            echo $JAVA_HOME
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      #- name: Install Dart Sass
      #  run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Build client_java
        run: ./mvnw -B clean install -DskipTests
      - name: Make Javadoc
        run: ./mvnw -B clean compile javadoc:javadoc javadoc:aggregate
      - name: Move the Javadoc to docs/static/api/
        run: mv ./target/site/apidocs ./docs/static/api && echo && echo 'ls ./docs/static/api' && ls ./docs/static/api
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
        working-directory: ./docs
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
        working-directory: ./docs
      - name: ls ./docs/public/api
        run: echo 'ls ./docs/public/api' && ls ./docs/public/api
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./docs/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
